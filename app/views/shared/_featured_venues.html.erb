<div class="featured-venues-container">
  <ul class="featured-venues-carousel" data-target="carousel">
    <%= @featured_venues.each do |venue| %>
      <li class="featured-venues-card" data-target="card" style="background-image: linear-gradient(rgba(0,0,0,0.4),rgba(0,0,0,0.5)), url(<%= venue.banner %>;">
        <h4><%= venue.name %></h4>
        <p><%#= venue.description %></p>
      </li>
    <% end %>
  </ul>
  <div class="button-container">
    <button data-action="slideLeft">L</button>
    <button data-action="slideRight">R</button>
  </div>
</div>



<!-- Sub this in for card from venue#index-->

<!-- 
<div class="card-venue-index" data-aos="fade-in">
  <%= image_tag venue.banner %>
  <div class="card-venue-infos">
    <div class="venue-infos">
      <h4><%= link_to "#{venue.name}", venue_path(venue) %></h4>
      <p><%= venue.suburb %></p>
    </div>
    <div class="open-job-listings">
      <% if !Job.where(venue: venue).empty? %>
        <p>Open job listings!</p>
      <% end %>
    </div>
  </div>
</div>
-->














<script>
  // Select carousel to manipulate and the buttons to add events to
  const carousel = document.querySelector("[data-target='carousel']");
  const card = carousel.querySelector("[data-target='card']");
  const leftButton = document.querySelector("[data-action='slideLeft']");
  const rightButton = document.querySelector("[data-action='slideRight']");

  // Prepare to limit the direction in which the carousel can slide, 
  // and to control how much the carousel advances by each time.
  // In order to slide the carousel so that only three cards are perfectly visible each time,
  // you need to know the carousel width, and the margin placed on a given card in the carousel
  const carouselWidth = carousel.offsetWidth;
  const cardStyle = card.currentStyle || window.getComputedStyle(card)
  const cardMarginRight = Number(cardStyle.marginRight.match(/\d+/g)[0]);

  // Count the number of total cards in carousel
  const cardCount = carousel.querySelectorAll("[data-target='card']").length;

  // Define an offset property to dynamically update by clicking the button controls
  // as well as a maxX property so the carousel knows when to stop at the upper limit
  let offset = 0;
  const maxX = -((cardCount / 3) * carouselWidth + 
                (cardMarginRight * (cardCount / 3)) - 
                carouselWidth - cardMarginRight);
                
  // Add the click events
  leftButton.addEventListener("click", function() {
    if (offset !== 0) {
      offset += carouselWidth + cardMarginRight;
      carousel.style.transform = `translateX(${offset}px)`;
      }
  })
    
  rightButton.addEventListener("click", function() {
    if (offset !== maxX) {
      offset -= carouselWidth + cardMarginRight;
      carousel.style.transform = `translateX(${offset}px)`;
    }
  })
</script>